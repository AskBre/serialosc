#!/usr/bin/env python

top = ".."

def build(bld):
	bld(export_includes="private", name="sosc_inc")

	objs = []
	obj = lambda src: objs.append(src)

	#
	# platform
	#

	if bld.env.DEST_OS[:3] == "win":
		obj("platform/windows.c")
		obj("detector/windows.c")
		obj("event_loop/windows.c")
		obj("zeroconf/windows.c")

	else:
		obj("platform/posix.c")

		if bld.env.DEST_OS == "linux":
			obj("platform/linux.c")
			obj("detector/libudev.c")
			obj("zeroconf/not_darwin.c")

		elif bld.env.DEST_OS == "darwin":
			obj("platform/darwin.c")
			obj("detector/iokitlib.c")
			obj("zeroconf/darwin.c")

		if bld.is_defined("HAVE_WORKING_POLL"):
			obj("event_loop/poll.c")
		else:
			obj("event_loop/select.c")


	#
	# common
	#

	obj("zeroconf/common.c")

	obj("osc/mext_methods.c")
	obj("osc/sys_methods.c")
	obj("osc/util.c")

	obj("util.c")
	obj("server.c")
	obj("config.c")
	obj("serialosc.c")

	if bld.env.DEST_OS == "darwin":
		bld.program(
			source=objs,
			target="serialosc",

			use="sosc_inc LO UDEV CONFUSE LIBMONOME",
			framework=["IOKit", "CoreFoundation"])

	else:
		bld.program(
			source=objs,
			target="serialosc",

			use="sosc_inc LO UDEV CONFUSE LIBMONOME DNSSD_INC DL")
